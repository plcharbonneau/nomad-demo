---
- name: Download and extract Nomad if needed
  unarchive:
    src: "https://releases.hashicorp.com/nomad/{{ nomad_version }}/nomad_{{ nomad_version }}_linux_amd64.zip"
    dest: /usr/bin
    creates: "nomad_{{ nomad_version }}_linux_amd64.zip"
    remote_src: yes

- name: Create nomad user
  user:
    name: nomad
    home: /etc/nomad.d
    system: yes
    shell: /usr/bin/false
    state: present

- name: Create data directory
  file:
    path: /opt/nomad
    state: directory
    owner: nomad
    group: nomad
    mode: 0755

- name: Check if Nomad token for Vault exists
  delegate_to: localhost
  become: no
  stat: path="{{ vault_token_dir }}/nomad-token"
  register: _vault_nomad_token_file

- name: Load Nomad token
  no_log: yes
  set_fact: vault_nomad_token="{{ lookup('file', vault_token_dir + '/nomad-token') }}"
  when: _vault_nomad_token_file.stat.exists

- name: Copy config
  template:
    src: "nomad.hcl.j2"
    dest: "/etc/nomad.d/nomad.hcl"
    owner: nomad
    group: nomad
    mode: 0644

- name: Create jobs directory
  file:
    path: "/home/{{ ansible_ssh_user }}/nomad_jobs"
    state: directory
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0755

- name: Copy example jobs config
  copy:
    src: "{{ item }}"
    dest: "/home/{{ ansible_ssh_user }}/nomad_jobs/{{ item | basename }}"
    owner: "{{ ansible_ssh_user }}"
    group: "{{ ansible_ssh_user }}"
    mode: 0644
  with_fileglob:
    - "{{ playbook_dir }}/nomad_jobs/*.nomad"

- name: Copy systemd service
  copy:
    src: "nomad.service"
    dest: "/etc/systemd/system/nomad.service"
    mode: 0644

- name: Start nomad service
  systemd:
    name: nomad
    state: restarted
    daemon_reload: yes
    enabled: yes
